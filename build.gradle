plugins {
  // To make build/libs/options-all.jar, run: gradle shadowJar
  id 'com.github.johnrengelman.shadow' version '2.0.2'
  // Commented out because Google Java Format mis-formats type annotations.
  // Code formatting with Google Java Format; use targets "goJF" and "verJF".
  // id "com.github.sherter.google-java-format" version "0.7.1"
}

apply plugin: 'java-library'

// Checker Framework pluggable type-checking
apply from: 'gradle/checkerframework-annos-in-comments.gradle'
// To upload to Maven Central:
//  * update version number in gradle/mavencentral.gradle
//  * run:  ./gradlew javadocWeb uploadArchives
//  * browse to https://oss.sonatype.org/#stagingRepositories
apply from: 'gradle/mavencentral.gradle'

dependencies {
  testImplementation 'junit:junit:4.12'
  implementation 'org.plumelib:bcel-util:0.0.9' // for JvmUtil.binaryNameToClassGetName(String)
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Turn Javadoc warnings into errors.
javadoc {
  options.addStringOption('Xwerror', '-quiet')
}

task javadocWeb(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = file("/cse/web/research/plumelib/plume-util/api")
  classpath = project.sourceSets.main.compileClasspath
}

/* Make Emacs TAGS table */
task tags(type: Exec) {
  description "Run etags to create an Emacs TAGS table"
  commandLine "bash", "-c", "find src/ -name '*.java' | sort | xargs etags"
}
